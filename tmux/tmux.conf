set -g status-justify 'left'
setw -g window-status-separator ' '
set -g status-right '%R | %a | %d.%b.%y | #[fg=red]@#H'
setw -g window-status-current-format '[#I.#W]'
set -g status-bg "#202020"
set -g message-command-fg "#b0b0b0"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-fg "#ff3030"
set -g message-bg "#303030"
set -g status-right-length "100"
set -g status-right-attr "none"
set -g message-fg "#b0b0b0"
set -g message-command-bg "#303030"
set -g status-attr "none"
set -g pane-border-fg "#404040"
set -g status-left-attr "none"
setw -g window-status-fg "#505050"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "#202020"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "#505050"
setw -g window-status-separator ""
setw -g window-status-bg "#202020"
set -g status-left "#[fg=#505050,bg=#202020] #S #[fg=#202020,bg=#202020,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#202020,bg=#202020,nobold,nounderscore,noitalics]#[fg=#505050,bg=#202020] %Y-%m-%d | %H:%M #[fg=#202020,bg=#202020,nobold,nounderscore,noitalics]#[fg=#505050,bg=#202020] #h "
setw -g window-status-format "#[fg=#505050,bg=#202020] #I |#[fg=#505050,bg=#202020] #W "
setw -g window-status-current-format "#[fg=#202020,bg=#303030,nobold,nounderscore,noitalics]#[fg=#b0b0b0,bg=#303030] #I |#[fg=#b0b0b0,bg=#303030] #W #[fg=#303030,bg=#202020,nobold,nounderscore,noitalics]"

# Force terminal to use 256 colors
set -g default-terminal "screen-256color"

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# remap prefix from 'C-b' to 'C-s'
unbind C-b
set-option -g prefix C-s
bind-key C-s send-prefix

# quick pane cycling
unbind ^S
bind ^S select-pane -t :.+

bind-key -n M-Left  swap-window -t -1
bind-key -n M-Right swap-window -t +1

bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Use k instead for [ for copy
bind-key k copy-mode

# make prefix s work with tmux-sensible (only bound if not set already)
unbind s

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Use vi mode
setw -g mode-keys vi
bind-key -T vi-copy 'v' begin-selection # Begin selection in copy mode.
bind-key -T vi-copy 'C-v' rectangle-toggle # Begin selection in copy mode.

bind-key -T vi-copy H start-of-line
bind-key -T vi-copy L end-of-line

# bind v/h
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# bind C-p/n to next/previous window. tmux-sensible does not allow multiple presses in a row
bind -r p previous-window
bind -r n next-window

# bind prefix + l to search window
unbind l
bind-key  l run-shell "tmux list-windows -F \"##I:##W\" | fzf-tmux | cut -d \":\" -f 1 | xargs tmux select-window -t"

# Mouse control
# from https://github.com/sagebind/dotfiles/blob/master/tmux.conf
bind -T root WheelUpPane if -F -t = "#{mouse_any_flag}" "send-keys -M" "select-pane -t =; if -F -t = \"#{alternate_on}\" \"send-keys Up Up Up\" \"copy-mode -e; send-keys -M\""
bind -T root WheelDownPane if -F -t = "#{mouse_any_flag}" "send-keys -M" "select-pane -t =; if -F -t = \"#{alternate_on}\" \"send-keys Down Down Down\" \"copy-mode -e; send-keys -M\""
bind -T vi-copy WheelUpPane halfpage-up
bind -T vi-copy WheelDownPane halfpage-down
#unknown if this works requires tmux 2.2
#unbind -t vi-copy MouseDragEnd1Pane
#bind -t vi-copy MouseDown1Pane clear-selection

# List of plugins
# Use Ctrl-b I to install and Ctrl-b U to update
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'christoomey/vim-tmux-navigator'

set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'Morantron/tmux-fingers'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"# Keys

# tmux-fingers
set-option -g @fingers-compact-hints 0
set-option -g @fingers-hint-position-nocompact "left"

# List keys in vi-copy mode
# :list-keys -t vi-copy

# tmux-yank
# prefix + y - copies text from the command line to clipboard.
# prefix + Y - copy pane current working directory to clipboard.

# in copy mode:
# Y (shift-y) - "put" selection - equivalent to copying a selection, and pasting it to the command line

# tmux-copycat
# prefix + / search text, then n N
# prefix + C-f search files
# prefix + alt-h - jumping over SHA-1 hashes (best used after git log command)
